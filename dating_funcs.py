
from shared import *
from system_funcs import get_status


#–∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ü–µ–Ω—è–µ—Ç —á—å—é-—Ç–æ –∞–Ω–∫–µ—Ç—É, –æ—Ç–º–µ—á–∞–µ–º —ç—Ç–æ, —á—Ç–æ–±—ã –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –µ–µ —Å–Ω–æ–≤–∞
def mark_as_viewed(user_id, match_id):
    with conn:
        conn.execute('''
            INSERT INTO evaluations (evaluator_id, evaluated_id) VALUES (?, ?)
        ''', (user_id, match_id))
        conn.commit()
        
#–≤ –∫–∞–∫–∏—Ö-—Ç–æ —Å–ª—É—á–∞—è—Ö –Ω—É–∂–Ω–æ —É–¥–∞–ª—è—Ç—å –æ—Ç–º–µ—Ç–∫–∏, —á—Ç–æ –∞–Ω–∫–µ—Ç–∞ —É–∂–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª–∞—Å—å. –ù–∞–ø—Ä–∏–º–µ—Ä —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –∞–Ω–∫–µ—Ç—É
def remove_match(user_id, match_id):
    with conn:
        conn.execute('''
            DELETE FROM evaluations
            WHERE evaluator_id = ? AND evaluated_id = ?
        ''', (user_id, match_id))
        conn.commit()
        
#–ö–æ–≥–¥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –∫–∞–∫–æ–µ-—Ç–æ –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ, –ª—É—á—à–µ –∏—Ö –æ–±–Ω—É–ª—è—Ç—å, —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ–ø–æ–ª–Ω—è—Ç—å –ø–∞–º—è—Ç—å 
def clear_evaluations_if_needed():
    with conn:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫
        row_count = conn.execute('SELECT COUNT(*) FROM evaluations').fetchone()[0]
        # –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫ –±–æ–ª—å—à–µ 300,000, –æ—á–∏—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
        if row_count >= 100000:
            conn.execute('DELETE FROM evaluations')
            conn.commit()

#–§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –∞–Ω–∫–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é + –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è.        
def find_matc(user_id, chat_id):
    with conn:
        result = conn.execute('SELECT preferences, gender  FROM user_profiles WHERE user_id = ?', (user_id,)).fetchone()
    if result:
        prefs, user_gender = result
        with conn:
            result = conn.execute('''
                SELECT u.user_id, u.name, u.photo, u.bio, u.age, u.amount_of_wins, u.amount_of_pars, u.city
                FROM user_profiles u
                LEFT JOIN evaluations e ON u.user_id = e.evaluated_id AND e.evaluator_id = ?
                WHERE e.evaluated_id IS NULL
                AND u.user_id != ?
                AND u.city = (SELECT city FROM user_profiles WHERE user_id = ?)
                AND (u.gender = ? OR ? = 3)
                AND (u.preferences = ? OR u.preferences = 3)
                AND u.age BETWEEN (SELECT min_age FROM user_profiles WHERE user_id = ?) 
                            AND (SELECT max_age FROM user_profiles WHERE user_id = ?)
                AND (u.min_age <= (SELECT age FROM user_profiles WHERE user_id = ?)
                    AND u.max_age >= (SELECT age FROM user_profiles WHERE user_id = ?))
                AND u.name IS NOT NULL 
                AND u.photo IS NOT NULL 
                AND u.bio IS NOT NULL 
                AND u.age IS NOT NULL 
                AND u.amount_of_wins IS NOT NULL
                AND u.amount_of_pars IS NOT NULL
                ORDER BY u.last_online DESC
                LIMIT 1
            ''', (user_id, user_id, user_id, prefs, prefs, user_gender, user_id, user_id, user_id, user_id)).fetchone()
        if result:
            match_id, match_name, match_photo, match_bio, match_age, match_wins, match_pars, match_city= result
            match_text = f"{match_name}, {match_age}, {match_city} - {match_bio}\n{match_wins} –ø–æ–±–µ–¥ –∏–∑ {match_pars} –ë–∞—Ç—Ç–ª–æ–≤"
            markup = types.InlineKeyboardMarkup()
            btn_like = types.InlineKeyboardButton("–ü–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è", callback_data=f"like_{match_id}")
            btn_dislike = types.InlineKeyboardButton("–ù–µ –Ω—Ä–∞–≤–∏—Ç—Å—è", callback_data=f"dislike_{match_id}")
            btn_exit = types.InlineKeyboardButton("–í—ã—Ö–æ–¥", callback_data=f"exit_{match_id}")
            btn_report = types.InlineKeyboardButton("–ñ–∞–ª–æ–±–∞", callback_data=f"report_{match_id}")
            btn_message = types.InlineKeyboardButton("üíå", callback_data = f"message_{match_id}")
            markup.add(btn_like, btn_dislike, btn_message)
            markup.add(btn_exit, btn_report)
            mark_as_viewed(user_id,match_id)
            bot.send_photo(chat_id, match_photo, caption=match_text,reply_markup=markup)
        else:
            # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –∞–Ω–∫–µ—Ç, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            bot.send_message(chat_id, "–í—Å–µ –∞–Ω–∫–µ—Ç—ã —É–∂–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω—ã\n–ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π, —á–µ–º –±–æ–ª—å—à–µ –ª—é–¥–µ–π –≤ –±–æ—Ç–µ, —Ç–µ–º –∏–Ω—Ç–µ—Ä–µ—Å–Ω–µ–µ –∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è!",reply_markup=dating_menu)
    else:
        bot.send_message(chat_id, f'–£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç –∞–Ω–∫–µ—Ç—ã, –∏–ª–∏ –æ–Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ –Ω–µ –¥–æ –∫–æ–Ω—Ü–∞.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /create_profile , —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –∞–Ω–∫–µ—Ç—É.')

#–µ—Å—Ç—å –º–Ω–æ–≥–æ —Ä–∞–∑–≤–µ—Ç–≤–ª–µ–Ω–∏–π, –∫–æ–≥–¥–∞ —á–µ–ª–æ–≤–µ–∫ —Å—Ç–∞–≤–∏—Ç –ª–∞–π–∫. –≤—ã–Ω–µ—Å–µ–º –≤ –æ—Ç–¥–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
def give_like(chat_id, user_id, match_id, evaluator_username, from_girl_to_man = False, with_message = False, message = ""):
    with conn:
        evaluator_profile = conn.execute('''
            SELECT name, photo, bio, age, amount_of_wins, amount_of_pars, city FROM user_profiles WHERE user_id = ?
        ''', (user_id,)).fetchone()
    if evaluator_profile:
        evaluator_name, evaluator_photo, evaluator_bio, ev_age, ev_wins, ev_pars, ev_city = evaluator_profile
        match_user_id = match_id
        if get_status(match_user_id) == 'banned':
            bot.send_message(user_id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω.')
        else:
            vzaim = types.InlineKeyboardMarkup()
            but_vzaim = types.InlineKeyboardButton(f'üëç', callback_data=f'vzaim {user_id} {evaluator_username}')
            but_dontlike = types.InlineKeyboardButton(f'üëé', callback_data=f'nevzaim {user_id}')
            vzaim.add(but_vzaim, but_dontlike)
            if (evaluator_username != None):
                if from_girl_to_man:
                    evaluator_text = f"–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ???||\(–µ—Å–ª–∏ –≤—ã –≤–∑–∞–∏–º–Ω–æ –ª–∞–π–∫–Ω–∏—Ç–µ ‚Äî –≤–∞–º –ø–æ–∫–∞–∂–µ—Ç—Å—è —é–∑–µ—Ä–Ω–µ–π–º\)||\n–ï–≥–æ –∞–Ω–∫–µ—Ç–∞:\n\n"
                    if with_message:
                        evaluator_text += f"{evaluator_name}, {ev_age}, {ev_city} \- {evaluator_bio}\n\n{ev_wins} –ø–æ–±–µ–¥ –∏–∑ {ev_pars} –ë–∞—Ç—Ç–ª–æ–≤\n\n–õ–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µüíå: {message}"
                        bot.send_message(chat_id, '–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!',reply_markup=dating_menu)
                    else:
                        evaluator_text += f"{evaluator_name}, {ev_age}, {ev_city} \- {evaluator_bio}\n\n{ev_wins} –ø–æ–±–µ–¥ –∏–∑ {ev_pars} –ë–∞—Ç—Ç–ª–æ–≤"
                    bot.send_photo(match_user_id, evaluator_photo, caption=evaluator_text, reply_markup=vzaim, parse_mode="MarkdownV2")
                else:
                    evaluator_text = f"–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{evaluator_username}!\n–ï–≥–æ –∞–Ω–∫–µ—Ç–∞:\n\n"
                    if with_message:
                        evaluator_text += f"{evaluator_name}, {ev_age}, {ev_city} - {evaluator_bio}\n\n{ev_wins} –ø–æ–±–µ–¥ –∏–∑ {ev_pars} –ë–∞—Ç—Ç–ª–æ–≤\n\n–õ–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µüíå: {message}"
                        
                    else:
                        evaluator_text += f"{evaluator_name}, {ev_age}, {ev_city} - {evaluator_bio}\n\n{ev_wins} –ø–æ–±–µ–¥ –∏–∑ {ev_pars} –ë–∞—Ç—Ç–ª–æ–≤"
                    bot.send_photo(match_user_id, evaluator_photo, caption=evaluator_text, reply_markup=vzaim)
            else:
                evaluator_text = f"–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ –ø–æ–Ω—Ä–∞–≤–∏–ª–∞—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {evaluator_name}!\n–ï–≥–æ –∞–Ω–∫–µ—Ç–∞:\n\n"
                evaluator_text += f"{evaluator_name}, {ev_age}, {ev_city} - {evaluator_bio}\n\n{ev_wins} –ø–æ–±–µ–¥ –∏–∑ {ev_pars} –ë–∞—Ç—Ç–ª–æ–≤"
                bot.send_photo(match_user_id, evaluator_photo, caption=evaluator_text, reply_markup=vzaim)
    find_matc(user_id,chat_id)

def give_vzaim(user_id, match_id, evaluator_username):
    with conn:
        evaluator_profile = conn.execute('''
        SELECT name, photo, bio, age, amount_of_wins, amount_of_pars, city FROM user_profiles WHERE user_id = ?
        ''', (user_id,)).fetchone()
    if evaluator_profile:
        evaluator_name, evaluator_photo, evaluator_bio, ev_age, ev_wins, ev_pars, ev_city = evaluator_profile
        with conn:
            result = conn.execute('SELECT user_id FROM user_profiles WHERE user_id = ?', (match_id,)).fetchone()
        if result:
            match_user_id = result
            if get_status(match_user_id) == 'banned':
                bot.send_message(user_id, '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –¥–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω.')
            else:
                if evaluator_username != None:
                    evaluator_text = f"–£—Ä–∞! –í–∑–∞–∏–º–Ω—ã–π –ª–∞–π–∫ —Å @{evaluator_username}!\n\n–ï–≥–æ –∞–Ω–∫–µ—Ç–∞:\n\n"
                else:
                    evaluator_text = f"–£—Ä–∞! –í–∑–∞–∏–º–Ω—ã–π –ª–∞–π–∫ —Å @{evaluator_name}!\n\n–ï–≥–æ –∞–Ω–∫–µ—Ç–∞:\n\n"
                evaluator_text += f"{evaluator_name}, {ev_age}, {ev_city} - {evaluator_bio}\n\n{ev_wins} –ø–æ–±–µ–¥ –∏–∑ {ev_pars} –ë–∞—Ç—Ç–ª–æ–≤"
                bot.send_photo(match_user_id, evaluator_photo, caption=evaluator_text)
                with conn:
                    conn.execute('''
                        INSERT INTO evaluations (evaluator_id, evaluated_id) VALUES (?, ?)
                    ''', (user_id, match_id))
                    conn.commit()
                with conn:
                    conn.execute('''
                        INSERT INTO evaluations (evaluator_id, evaluated_id) VALUES (?, ?)
                    ''', (match_id, user_id))
                    conn.commit()
                # bot.send_message(user_id, f'–û—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∑–∞–∏–º–Ω—ã–π –ª–∞–π–∫!', reply_markup=start_menu)
