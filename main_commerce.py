import telebot
from random import choice,randint
from telebot import types
from datetime import datetime
import time
from geopy.geocoders import Nominatim
from geopy.exc import GeocoderUnavailable, GeocoderTimedOut
from validate_email import validate_email #pip install py3dns (?)
from email_check_and_send import my_valid_email, send_verification_email


geolocator = Nominatim(user_agent="city_validator") #city validator

#–°–æ–∑–¥–∞–µ–º –ë–î

#–ü–æ–¥–≥—Ä—É–∂–∞–µ–º –±–æ—Ç–∞, –∫–Ω–æ–ø–∫–∏
from shared import *

#------------------------------------------------------------------------------------------------------------------------------------------
#–°–ò–°–¢–ï–ú–ù–´–ï –§–£–ù–ö–¶–ò–ò
#------------------------------------------------------------------------------------------------------------------------------------------

from system_funcs import *

#------------------------------------------------------------------------------------------------------------------------------------------
#–§–£–ù–ö–¶–ò–ò –î–õ–Ø –ó–ù–ê–ö–û–ú–°–¢–í
#------------------------------------------------------------------------------------------------------------------------------------------

from dating_funcs import *

#------------------------------------------------------------------------------------------------------------------------------------------
#–§–£–ù–ö–¶–ò–ò –î–õ–Ø –§–û–¢–û-–ë–ê–¢–¢–õ–û–í
#------------------------------------------------------------------------------------------------------------------------------------------

from battle_funcs import *

#------------------------------------------------------------------------------------------------------------------------------------------
#–§–£–ù–ö–¶–ò–ò –î–õ–Ø –ü–õ–ê–¢–ï–ñ–ï–ô –ò –ü–û–ü–û–õ–ù–ï–ù–ò–Ø –ë–ê–õ–ê–ù–°–ê
#------------------------------------------------------------------------------------------------------------------------------------------

from pay_funcs import *

#------------------------------------------------------------------------------------------------------------------------------------------
#–§–£–ù–ö–¶–ò–û–ù–ê–õ –ë–û–¢–ê. IF MESSAGE.TEXT == X DO FUNC(1) ELSE DO FUNC(2)
#------------------------------------------------------------------------------------------------------------------------------------------

#--------------------------------------------------------------------------------------------------------------
#–ö–û–ú–ê–ù–î–´ –û–ë–©–ò–ï
#--------------------------------------------------------------------------------------------------------------

#–∫–æ–º–∞–Ω–¥–∞ start
@bot.message_handler(commands=['start'])
def handle_start(message):
    referrer_id = message.text.split()[1] if len(message.text.split()) > 1 else None
    user_id = message.from_user.id
    if referrer_id and referrer_id.isdigit() and int(referrer_id) != user_id:
        add_referral(referrer_id=int(referrer_id), referred_id=user_id)
    elif referrer_id and referrer_id.isdigit() and int(referrer_id) == user_id:
        bot.send_message(user_id, "–ù–µ–ª—å–∑—è –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –ø–æ —Å–≤–æ–µ–π –∂–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ!")
    update_last_online(message)
    chat_id = message.chat.id
    markup = types.InlineKeyboardMarkup()
    btn = types.InlineKeyboardButton("–î–∞–ª–µ–µ üëâ",callback_data='next')
    markup.add(btn)
    bot.send_message(chat_id,f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Twinkl - –°–µ—Ä–≤–∏—Å –¥–æ—Ä–æ–≥–∏—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤!\n\n–ó–Ω–∞–∫–æ–º—å—Å—è –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É <i>–ª–∞–π–∫ —Å —Ü–µ–Ω–æ–π - –∏–Ω—Ç–µ—Ä–µ—Å —Å –Ω–∞–º–µ—Ä–µ–Ω–∏–µ–º</i>", reply_markup=markup, parse_mode='HTML')

#–≤—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã start
@bot.callback_query_handler(func=lambda call: call.data == 'next')
def send(call):
    bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
    markup = types.InlineKeyboardMarkup()
    btn = types.InlineKeyboardButton('–ü—Ä–∏–Ω–∏–º–∞—é!üëå', callback_data= 'ready')
    markup.add(btn)
    bot.send_message(call.message.chat.id, f'‚ùï–ß—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –±–æ—Ç–µ, –Ω—É–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–≤–æ—é —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É\n–ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—É—é –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é, –ø–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç - –æ–ø–∞—Å–Ω–∞—è —Å—Ä–µ–¥–∞, –≥–¥–µ –ª—é–¥–∏ –º–æ–≥—É—Ç –≤—ã–¥–∞–≤–∞—Ç—å —Å–µ–±—è –∑–∞ –¥—Ä—É–≥–∏—Ö\n\n–ü—Ä–æ–¥–æ–ª–∂–∞—è, –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ [–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ](https://docs.google.com/document/d/e/2PACX-1vTIQFG3VuFD4XnyP9GDER9gYJJVew4dwDXvzxgurOn376VKE3KAUSh6U9-pRUHMwX9aygCapkC5iDKu/pub) –∏ [–ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏](https://docs.google.com/document/d/e/2PACX-1vRm9ZbciP3xHc0QniRrb_EijvhYW3Lm_2BfyOdvGIjQ1rPrUvBXybhiMaCsE-ac2QJVr685N4XwQ-af/pub)', reply_markup=markup, parse_mode='Markdown')
    
#—Ç—Ä–µ—Ç—å—è —á–∞—Å—Ç—å –∫–æ–º–∞–Ω–¥—ã start
@bot.callback_query_handler(func=lambda call: call.data == 'ready')
def send2(call):
    bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
    bot.send_message(call.message.chat.id, '–î–ª—è –Ω–∞—á–∞–ª–∞ —Ç–µ–±–µ –Ω—É–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–≤–æ—é –ø–æ—á—Ç—É\n–ß—Ç–æ–±—ã —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, –ø—Ä–æ–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /verify\n\n–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7 - @help_username_bot')

#–∫–æ–º–∞–Ω–¥–∞ verify - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ –ø–æ—á—Ç–µ 
@bot.message_handler(commands=['verify'])
def verif(message):
    chat_id = message.chat.id
    user_id = message.from_user.id
    if get_status(user_id) == 'banned':
        bot.send_message(user_id, f'–í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã. –ß—Ç–æ–±—ã –æ–±–∂–∞–ª–æ–≤–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∏–ª–∏ –∫—É–ø–∏—Ç—å —Ä–∞–∑–±–∞–Ω –ø–∏—à–∏—Ç–µ @help_username_bot')
    else:
        if is_profile_verified(user_id):
            bot.send_message(chat_id,'–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω', reply_markup=start_menu)
        else:
            user_states[user_id] = 'wait email'
            bot.send_message(chat_id,'–û—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à—É –ø–æ—á—Ç—É')

@bot.callback_query_handler(func=lambda call: call.data in ["reward_like", "reward_cash", "invite_more"])
def handle_reward_buttons(call):
    user_id = call.from_user.id
    cursor = conn.execute("SELECT referral_count FROM referral_rewards WHERE user_id = ?", (user_id,))
    row = cursor.fetchone()
    referral_count = row[0] if row else 0

    if call.data == "reward_like":
        if referral_count >= 3:
            # –ù–∞—á–∏—Å–ª—è–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ª–∞–π–∫ –∏ —É–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤
            conn.execute("UPDATE referral_rewards SET referral_count = referral_count - 3 WHERE user_id = ?", (user_id,))
            update_balance(user_id, 50)  # 50 —Ä—É–±–ª–µ–π = —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –ª–∞–π–∫–∞
            bot.send_message(user_id, "–í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ª–∞–π–∫!")
        else:
            bot.send_message(user_id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –¥–ª—è —ç—Ç–æ–π –Ω–∞–≥—Ä–∞–¥—ã.")
    elif call.data == "reward_cash":
        if referral_count >= 100:
            # –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω—É
            conn.execute("UPDATE referral_rewards SET referral_count = referral_count - 100 WHERE user_id = ?", (user_id,))
            bot.send_message(user_id, "–í—ã –≤—ã–±—Ä–∞–ª–∏ 300‚ÇΩ. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.")
            bot.send_message(ADMIN_CHAT_ID, f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–ø—Ä–æ—Å–∏–ª –≤—ã–ø–ª–∞—Ç—É 300‚ÇΩ.")
        else:
            bot.send_message(user_id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ –¥–ª—è —ç—Ç–æ–π –Ω–∞–≥—Ä–∞–¥—ã.")
    elif call.data == "invite_more":
        referral_link = f"https://t.me/{bot.get_me().username}?start={user_id}"
        bot.send_message(user_id, f"–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ: {referral_link}")

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Ñ–æ—Ç–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å—ã–ª–∞–µ—Ç. —Ñ–æ—Ç–æ –Ω–∞–º –Ω—É–∂–Ω–æ —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø–æ–ª–Ω—è–µ—Ç –∞–Ω–∫–µ—Ç—É, —É –Ω–µ–≥–æ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –æ—Å–æ–±—ã–π —Å—Ç–∞—Ç—É—Å –≤ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç. –≤ –¥—Ä—É–≥–∏—Ö —Å–ª—É—á–∞—è—Ö –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    if get_status(user_id) == 'banned':
        bot.send_message(user_id, f'–í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã. –ß—Ç–æ–±—ã –æ–±–∂–∞–ª–æ–≤–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∏–ª–∏ –∫—É–ø–∏—Ç—å —Ä–∞–∑–±–∞–Ω –ø–∏—à–∏—Ç–µ @help_username_bot')
    else:
        bot.send_message(chat_id, f'–ó–∞—á–µ–º –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ —Ñ–æ—Ç–æ?')


#--------------------------------------------------------------------------------------------------------------
#–ö–û–ú–ê–î–ù–´ –î–õ–Ø –ó–ù–ê–ö–û–ú–°–¢–í 
#--------------------------------------------------------------------------------------------------------------

#–∫–æ–º–∞–Ω–¥–∞ create_profile - —Å–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É
@bot.message_handler(commands=['create_profile'])
def make_profile(message):
    chat_id = message.chat.id
    user_id = message.from_user.id
    if get_status(user_id) == 'banned':
        bot.send_message(user_id, f'–í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã. –ß—Ç–æ–±—ã –æ–±–∂–∞–ª–æ–≤–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∏–ª–∏ –∫—É–ø–∏—Ç—å —Ä–∞–∑–±–∞–Ω –ø–∏—à–∏—Ç–µ @help_username_bot')
    else:
        if is_profile_verified(user_id):
            with conn:
                conn.execute('''
                    DELETE FROM evaluations
                    WHERE evaluator_id = ? OR evaluated_id = ?
                ''', (user_id, user_id))
                conn.commit()
            with conn:
                conn.execute('''
                             DELETE FROM battle_queue WHERE user_id = ?
                             ''', (user_id,))
                conn.commit()
            with conn:
                result = conn.execute('SELECT user_id FROM user_profiles WHERE user_id = ?', (user_id,)).fetchone()
            if result is None:
                with conn:
                    conn.execute('''
                        INSERT INTO user_profiles (user_id) VALUES (?)
                    ''', (user_id,))
            bot.send_message(chat_id,'–ú—ã —Ä–∞–¥—ã, —á—Ç–æ –≤—ã —Ä–µ—à–∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É!\n–î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º, –∫–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?',reply_markup = types.ReplyKeyboardRemove())
            bot.register_next_step_handler(message, get_name, is_edit = False)
        else:
            bot.send_message(chat_id, '–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç! –ß—Ç–æ–±—ã —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, –ø—Ä–æ–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /verify')



#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ inline –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥ –∞–Ω–∫–µ—Ç–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. —Å—Ç–∞–≤–∏–º –ª–∞–π–∫/–¥–∏–∑–ª–∞–π–∫/–∏—Ç–¥.
@bot.callback_query_handler(func=lambda call: call.data.startswith(('like_', 'dislike_', 'exit', 'report', 'message')))
def handle_evaluation(call):
    chat_id = call.message.chat.id
    user_id = call.from_user.id
    if get_status(user_id) == 'banned':
        bot.send_message(user_id, f'–í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã. –ß—Ç–æ–±—ã –æ–±–∂–∞–ª–æ–≤–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∏–ª–∏ –∫—É–ø–∏—Ç—å —Ä–∞–∑–±–∞–Ω –ø–∏—à–∏—Ç–µ @help_username_bot')
    else:
        if is_profile_verified(user_id):
            bot.edit_message_reply_markup(chat_id, call.message.message_id, reply_markup=None)
            with conn:
                user_gender = conn.execute('SELECT gender FROM user_profiles WHERE user_id = ?', (user_id,)).fetchone()
            user_gender = user_gender[0]
                # user_gender = int(user_gender)
            if call.data.startswith('like_'):
                match_id = int(call.data.split('_')[1])
                with conn:
                    match_gender = conn.execute('SELECT gender FROM user_profiles WHERE user_id = ?', (match_id,)).fetchone()
                match_gender = match_gender[0]
                    # match_gender = int(match_gender)
                if user_gender == 1 and match_gender == 2:
                    with conn: 
                        balance = conn.execute('SELECT balance FROM user_profiles WHERE user_id = ?', (user_id,)).fetchone()
                    balance = int(balance[0])
                    if balance >= 50:
                        bot.send_message(chat_id,f'–û—Ç–ø—Ä–∞–≤–∏–ª–∏ –ª–∞–π–∫!\n–ë–∞–ª–∞–Ω—Å: {balance - 50}', reply_markup=dating_menu)
                        with conn:
                            conn.execute('''UPDATE user_profiles SET balance = balance - 50 WHERE user_id = ?''', (user_id,))
                        give_like(chat_id, user_id, match_id, call.from_user.username)
                    else:
                        bot.send_message(chat_id, "–°—Ç–æ–ø! –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ!\n\n–ù–∞—à —Å–µ—Ä–≤–∏—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω —Ç–∞–∫, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –ª–∞–π–∫ –±—ã–ª –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–º –∏ –∑–Ω–∞—á–∏–º—ã–º. –ú—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Å–µ—Ä—å–µ–∑–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —á–µ—Ç–∫–æ–≥–æ –≤—ã–±–æ—Ä–∞. –ü–ª–∞—Ç–Ω—ã–µ –ª–∞–π–∫–∏ –ø–æ–º–æ–≥–∞—é—Ç –≤–∞–º –±–æ–ª–µ–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç—å –∫ –≤—ã–±–æ—Ä—É –ø–∞—Ä—Ç–Ω–µ—Ä—à, —Å–æ–∑–¥–∞–≤–∞—è —É—Å–ª–æ–≤–∏—è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π —à–∞–≥ –±—ã–ª –ø—Ä–æ–¥—É–º–∞–Ω–Ω—ã–º –∏ —Ü–µ–ª–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º.\n\n–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ç–µ–º–∏, –∫—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω!\n\n–¶–µ–Ω–∞ –æ–¥–Ω–æ–≥–æ –ª–∞–π–∫–∞ - 50 —Ä—É–±–ª–µ–π, –∫–∞–∑–∞–ª–æ—Å—å –±—ã - —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ, –Ω–æ –≥–æ—Ç–æ–≤—ã –ª–∏ –≤—ã —Ç—Ä–∞—Ç–∏—Ç—å 50 —Ä—É–±–ª–µ–π –Ω–∞ –∫–∞–∂–¥—É—é –∞–Ω–∫–µ—Ç—É?...\n\nüëâ–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –º–æ–∂–Ω–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ /pay", reply_markup=start_menu)
                        remove_match(user_id, match_id)
                else:
                    give_like(chat_id, user_id, match_id, call.from_user.username, (user_gender == 2 and match_gender == 1))
            elif call.data.startswith('message_'):
                match_id = int(call.data.split('_')[1])
                user_states[user_id] = f'wait message {match_id}'
                bot.send_message(user_id, "–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—Ç–µ–ª–∏ –±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–º–µ—Å—Ç–µ —Å –ª–∞–π–∫–æ–º\n\n–ï—Å–ª–∏ –ø–µ—Ä–µ–¥—É–º–∞–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ - –Ω–∞–ø–∏—à–∏—Ç–µ –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–¥–∏–Ω —Å–∏–º–≤–æ–ª - 0")
            elif call.data.startswith('dislike_'):
                # match_id = int(call.data.split('_')[1])
                # –ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –∞–Ω–∫–µ—Ç–µ
                find_matc(user_id,chat_id)
            elif call.data.startswith('exit_'):
                match_id = int(call.data.split('_')[1])
                remove_match(user_id, match_id)
                bot.send_message(chat_id, "–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –∑–Ω–∞–∫–æ–º—Å—Ç–≤.",reply_markup=dating_menu)
            elif call.data.startswith('report_'):
                bot.send_message(user_id, f'–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –∂–∞–ª–æ–±—É! –°–∫–æ—Ä–æ –º—ã –µ–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º.')
                match_id = int(call.data.split('_')[1])
                with conn:
                    result = conn.execute('''
                    SELECT name, photo, gender, bio, age 
                    FROM user_profiles 
                    WHERE user_id = ?
                    ''', (match_id,)).fetchone()
                name, photo, gender, bio, age = result
                bot.send_photo(671084247,photo,caption= f'–ñ–∞–ª–æ–±–∞ –Ω–∞ {match_id}. –ï–≥–æ –∞–Ω–∫–µ—Ç–∞:\n\n{name}, {age}\n\n{bio}\n\n–ß—Ç–æ–±—ã –µ–≥–æ –∑–∞–±–∞–Ω–∏—Ç—å, –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É ban match_id')
                bot.send_photo(7515729537,photo,caption= f'–ñ–∞–ª–æ–±–∞ –Ω–∞ {match_id}. –ï–≥–æ –∞–Ω–∫–µ—Ç–∞:\n\n{name}, {age}\n\n{bio}\n\n–ß—Ç–æ–±—ã –µ–≥–æ –∑–∞–±–∞–Ω–∏—Ç—å, –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É ban match_id')
                find_matc(user_id, chat_id)
        else:
            bot.send_message(chat_id, '–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç! –ß—Ç–æ–±—ã —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, –ø—Ä–æ–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /verify')


#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –≤–∑–∞–∏–º–Ω—ã–π/–Ω–µ–≤–∑–∞–∏–º–Ω—ã–π –ª–∞–π–∫ (–∫–æ–≥–¥–∞ —Ç–µ–±—è –ª–∞–π–∫–∞—é—Ç - –ø—Ä–∏—Ö–æ–¥–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å –∞–Ω–∫–µ—Ç–æ–π –ª–∞–π–∫–Ω–≤—É—à–µ–≥–æ –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –¥–∞—Ç—å –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å)
@bot.callback_query_handler(func=lambda call: call.data.startswith(('vzaim', 'nevzaim')))
def handle_evaluation(call):
    chat_id = call.message.chat.id
    user_id = call.from_user.id
    match_id = int(call.data.split(' ')[1])
    if call.data.startswith('vzaim'):
        with conn:
            user_gender = conn.execute('SELECT gender FROM user_profiles WHERE user_id = ?', (user_id,)).fetchone()
        user_gender = user_gender[0]
        with conn:
            match_gender = conn.execute('SELECT gender FROM user_profiles WHERE user_id = ?', (match_id,)).fetchone()
        match_gender = match_gender[0]
        if user_gender == 1 and match_gender == 2:
            with conn: 
                balance = conn.execute('SELECT balance FROM user_profiles WHERE user_id = ?', (user_id,)).fetchone()
            balance = int(balance[0])
            if balance >= 25:
                bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
                with conn:
                    conn.execute('''UPDATE user_profiles SET balance = balance - 25 WHERE user_id = ?''', (user_id,))
                    username = (call.data.split(" ")[2])
                bot.send_message(chat_id,f'–û—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∑–∞–∏–º–Ω—ã–π –ª–∞–π–∫!\n–Æ–∑–µ—Ä–Ω–µ–π–º –¥–µ–≤—É—à–∫–∏: @{username}\n–ë–∞–ª–∞–Ω—Å: {balance - 25}', reply_markup=dating_menu)
                give_vzaim(user_id, match_id, call.from_user.username)
            else:
                bot.send_message(chat_id, f'üí¨ –í–∑–∞–∏–º–Ω—ã–π –ª–∞–π–∫ ‚Äî —à–∞–≥ –Ω–∞–≤—Å—Ç—Ä–µ—á—É!\n\n–í–∑–∞–∏–º–Ω—ã–π –ª–∞–π–∫ —Å—Ç–æ–∏—Ç –≤ 2 —Ä–∞–∑–∞ –¥–µ—à–µ–≤–ª–µ –æ–±—ã—á–Ω–æ–≥–æ. –ú—ã —Å–¥–µ–ª–∞–ª–∏ —ç—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ, —á—Ç–æ–±—ã –≤—ã –º–æ–≥–ª–∏ –æ—Ç–≤–µ—Ç–∏—Ç—å –≤–∑–∞–∏–º–Ω–æ—Å—Ç—å—é —Ç–µ–º, –∫—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –æ—Ç–≤–µ—á–∞—Ç—å –≤–∑–∞–∏–º–Ω–æ—Å—Ç—å—é –≤—Å–µ–º –ø–æ–¥—Ä—è–¥. –≠—Ç–æ –¥–µ–ª–∞–µ—Ç –∫–∞–∂–¥—ã–π –≤–∑–∞–∏–º–Ω—ã–π –ª–∞–π–∫ –±–æ–ª–µ–µ –∑–Ω–∞—á–∏–º—ã–º.\n\n–í—Å–µ–≥–æ –ª–∏—à—å 25 —Ä—É–±–ª–µ–π, –Ω–æ –≥–æ—Ç–æ–≤—ã –ª–∏ –≤—ã –æ—Ç–¥–∞—Ç—å –∏—Ö –ª—é–±–æ–π?...\n\nüëâ–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –º–æ–∂–Ω–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ /pay', reply_markup=start_menu)
        else:
            bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
            bot.send_message(chat_id,f'–û—Ç–ø—Ä–∞–≤–∏–ª–∏ –≤–∑–∞–∏–º–Ω—ã–π –ª–∞–π–∫!', reply_markup=dating_menu)
            give_vzaim(user_id, match_id, call.from_user.username)
    else:
        bot.edit_message_reply_markup(call.message.chat.id, call.message.message_id, reply_markup=None)
        with conn:
            conn.execute('''
                INSERT INTO evaluations (evaluator_id, evaluated_id) VALUES (?, ?)
            ''', (user_id, match_id))
            conn.commit()
        with conn:
            conn.execute('''
                INSERT INTO evaluations (evaluator_id, evaluated_id) VALUES (?, ?)
            ''', (match_id, user_id))
            conn.commit()

#--------------------------------------------------------------------------------------------------------------
#–ö–û–ú–ê–ù–î–´ –î–õ–Ø –§–û–¢–û –ë–ê–¢–¢–õ–û–í
#--------------------------------------------------------------------------------------------------------------

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∏–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∏ –≤–æ –≤—Ä–µ–º—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –≤ –±–∞—Ç—Ç–ª–µ. –≥–æ–ª–æ—Å –∑–∞ –ª–µ–≤–æ–≥–æ/–ø—Ä–∞–≤–æ–≥–æ, –≤—ã—Ö–æ–¥ –∏–∑ –±–∞—Ç—Ç–ª–æ–≤. 
@bot.callback_query_handler(func=lambda call: call.data.startswith('vote_') or call.data == 'exit_battle')
def handle_vote_or_exit(call):
    chat_id = call.message.chat.id
    user_id = call.from_user.id
    if get_status(user_id) == 'banned':
        bot.send_message(user_id, f'–í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã. –ß—Ç–æ–±—ã –æ–±–∂–∞–ª–æ–≤–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∏–ª–∏ –∫—É–ø–∏—Ç—å —Ä–∞–∑–±–∞–Ω –ø–∏—à–∏—Ç–µ @help_username_bot')
    else:
        if is_profile_verified(user_id):
            bot.delete_message(chat_id, call.message.message_id)
            if call.data == 'exit_battle':
                bot.send_message(chat_id, "–í—ã –≤—ã—à–ª–∏ –∏–∑ –±–∞—Ç—Ç–ª–æ–≤.")
                return
            battle_id = int(call.data.split('_')[-1])
            vote_side = call.data.split('_')[1]
            with conn:
                existing_vote = conn.execute('''
                    SELECT vote_side FROM votes WHERE user_id = ? AND battle_id = ?
                ''', (user_id, battle_id)).fetchone()
                if existing_vote:
                    bot.send_message(chat_id, "–í—ã —É–∂–µ –≥–æ–ª–æ—Å–æ–≤–∞–ª–∏ –≤ —ç—Ç–æ–º –±–∞—Ç—Ç–ª–µ.")
                    return
                conn.execute('''
                    INSERT INTO votes (user_id, battle_id, vote_side) VALUES (?, ?, ?)
                ''', (user_id, battle_id, vote_side))
                if vote_side == 'left':
                    conn.execute('UPDATE battles SET votes_participant_1 = votes_participant_1 + 1 WHERE battle_id = ?', (battle_id,))
                else:
                    conn.execute('UPDATE battles SET votes_participant_2 = votes_participant_2 + 1 WHERE battle_id = ?', (battle_id,))
                conn.commit()
            show_next_battle(chat_id,user_id)
        else:
            bot.send_message(chat_id, '–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç! –ß—Ç–æ–±—ã —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, –ø—Ä–æ–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /verify')


#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ–≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç—É
@bot.message_handler(content_types=['text'])
def answer(message):
    user_id = message.from_user.id
    chat_id = message.chat.id
    is_profile_verified(user_id)
    update_last_online(message)
    #–û–ë–†–ê–ë–û–¢–ö–ê –¢–ï–ö–°–¢–ê –í –û–ë–©–ò–• –°–õ–£–ß–ê–Ø–•
    if get_status(user_id) == 'banned':
        bot.send_message(user_id, f'–í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã. –ß—Ç–æ–±—ã –æ–±–∂–∞–ª–æ–≤–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∏–ª–∏ –∫—É–ø–∏—Ç—å —Ä–∞–∑–±–∞–Ω –ø–∏—à–∏—Ç–µ @help_username_bot')
    else:
        if user_id in user_states and user_states[user_id] == 'wait email':
            email = message.text
            if validate_email(email) and my_valid_email(email):
                if (is_email_registered(email)):
                    bot.send_message(chat_id, f'–¢–∞–∫–∞—è –ø–æ—á—Ç–∞ —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –≤ —Å–∏—Å—Ç–µ–º—É. –í–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥—É—é')
                else:
                    code = ''
                    for i in range(6):
                        x = str(randint(0,9))
                        code += x
                    with conn:
                        last_sent = conn.execute('SELECT last_email_send FROM user_profiles WHERE user_id = ?', (user_id,)).fetchone()
                    if last_sent != (None,) and int(time.time()) - last_sent[0] < 60*2:
                        bot.send_message(user_id, '–í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–∏—Å–µ–º\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –±–æ—Ç—É —á–µ—Ä–µ–∑ 2 –º–∏–Ω—É—Ç—ã (—Å –º–æ–º–µ–Ω—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –∫–æ–¥–∞)')
                        user_states[user_id] = 'wait email'
                    else:
                        bot.send_message(chat_id, '–í–∞–º –Ω–∞ –ø–æ—á—Ç—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —à–µ—Å—Ç–∏–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ –µ–≥–æ, —á—Ç–æ–±—ã –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ—á—Ç—É\n\n–ï—Å–ª–∏ –∫–æ–¥ –Ω–µ –ø—Ä–∏—à–µ–ª - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É "–°–ø–∞–º"!\n\n–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7 - @help_username_bot')
                        with conn:
                            conn.execute('UPDATE user_profiles SET last_email_send = ? WHERE user_id = ?', (int(time.time()), user_id,))
                        send_verification_email(email, code, user_id)
                        verif_codes[user_id] = code
                        user_states[user_id] = f'wait code {email}'
            else:
                bot.send_message(chat_id, '–í—ã –≤–≤–µ–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –ø–æ—á—Ç—É. –í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É –Ω–∞—Å—Ç–æ—è—é—â—É—é —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –ø–æ—á—Ç—É, –±–µ–∑ —Ç–æ—á–µ–∫ –∏ –ø—Ä–æ–±–µ–ª–æ–≤\n\n–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7 - @help_username_bot')
                user_states[user_id] = 'wait email'
        elif user_id in user_states and user_states[user_id].startswith('wait code'):
            code = message.text
            if code == verif_codes[user_id]:
                email = user_states[user_id].split()[2]
                with conn:
                    conn.execute('UPDATE user_profiles SET email = ? WHERE user_id = ?', (encrypt_data(email, SECRET_KEY), user_id,))
                bot.send_message(message.chat.id, "–ü–æ—á—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!\n–ü—Ä–∏—è—Ç–Ω—ã—Ö –∑–Ω–∞–∫–æ–º—Å—Ç–≤ üòâ\n\n–ß—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É, –ø—Ä–æ–ø–∏—à–∏—Ç–µ /create_profile",reply_markup=start_menu)
                user_states[user_id] = ''
            else:
                bot.send_message(chat_id, f'–í—ã –≤–≤–µ–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∫–æ–¥!\n\n–û–±—ã—á–Ω–æ –∫–æ–¥ –ø–µ—Ä–µ–∞–¥—Ä–µ—Å–æ–≤—ã–≤–∞–µ—Ç—Å—è –Ω–∞ –≤–∞—à—É –ª–∏—á–Ω—É—é –ø–æ—á—Ç—É (mail.ru, gmail, –∏—Ç–¥), –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—É—é –∫ –ª–∏—á–Ω–æ–º—É –∫–∞–±–∏–Ω–µ—Ç—É –ú–ò–†–≠–ê. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É "–°–ø–∞–º"!\n\n–ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7 - @help_username_bot')
                user_states[user_id] = 'wait email'
        #–û–ë–†–ê–ë–û–¢–ö–ê –¢–ï–ö–°–¢–ê –í –ó–ù–ê–ö–û–ú–°–¢–í–ê–•
        if (is_profile_verified(user_id)):
            if user_id in user_states and user_states[user_id].startswith('wait message'):
                evaluator_username = message.from_user.username
                match_id = user_states[user_id].split()[2]
                user_states[user_id] = ''
                with conn:
                    user_gender = conn.execute('SELECT gender FROM user_profiles WHERE user_id = ?', (user_id,)).fetchone()
                    user_gender = user_gender[0]
                    match_gender = conn.execute('SELECT gender FROM user_profiles WHERE user_id = ?', (match_id,)).fetchone()
                    match_gender = match_gender[0]
                if message.text == "0":
                    user_states[user_id] = ''
                    remove_match(user_id, match_id)
                    find_matc(user_id, chat_id)
                else:
                    if (user_gender == 1 and match_gender == 2):
                        with conn:
                            balance = conn.execute('SELECT balance FROM user_profiles WHERE user_id = ?', (user_id,)).fetchone()
                        balance = int(balance[0])
                        if balance >= 50:
                            bot.send_message(chat_id,f'–û—Ç–ø—Ä–∞–≤–∏–ª–∏ –ª–∞–π–∫ —Å —Å–æ–æ–±—â–µ–Ω–∏–µ–º!\n–ë–∞–ª–∞–Ω—Å: {balance - 50}', reply_markup=dating_menu)
                            with conn:
                                conn.execute('''UPDATE user_profiles SET balance = balance - 50 WHERE user_id = ?''', (user_id,))
                            give_like(chat_id, user_id, match_id, message.from_user.username, (user_gender == 2 and match_gender == 1), True, message.text)
                        else:
                            bot.send_message(chat_id, "–°—Ç–æ–ø! –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ!\n\n–ù–∞—à —Å–µ—Ä–≤–∏—Å —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω —Ç–∞–∫, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π –ª–∞–π–∫ –±—ã–ª –æ—Å–æ–∑–Ω–∞–Ω–Ω—ã–º –∏ –∑–Ω–∞—á–∏–º—ã–º. –ú—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Å–µ—Ä—å–µ–∑–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ —á–µ—Ç–∫–æ–≥–æ –≤—ã–±–æ—Ä–∞. –ü–ª–∞—Ç–Ω—ã–µ –ª–∞–π–∫–∏ –ø–æ–º–æ–≥–∞—é—Ç –≤–∞–º –±–æ–ª–µ–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç—å –∫ –≤—ã–±–æ—Ä—É –ø–∞—Ä—Ç–Ω–µ—Ä—à, —Å–æ–∑–¥–∞–≤–∞—è —É—Å–ª–æ–≤–∏—è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∫–∞–∂–¥—ã–π —à–∞–≥ –±—ã–ª –ø—Ä–æ–¥—É–º–∞–Ω–Ω—ã–º –∏ —Ü–µ–ª–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º.\n\n–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ç–µ–º–∏, –∫—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤–∞–º –∏–Ω—Ç–µ—Ä–µ—Å–µ–Ω!\n\n–¶–µ–Ω–∞ –æ–¥–Ω–æ–≥–æ –ª–∞–π–∫–∞ - 50 —Ä—É–±–ª–µ–π, –∫–∞–∑–∞–ª–æ—Å—å –±—ã - —Å–æ–≤—Å–µ–º –Ω–µ–º–Ω–æ–≥–æ, –Ω–æ –≥–æ—Ç–æ–≤—ã –ª–∏ –≤—ã —Ç—Ä–∞—Ç–∏—Ç—å 50 —Ä—É–±–ª–µ–π –Ω–∞ –∫–∞–∂–¥—É—é –∞–Ω–∫–µ—Ç—É?...\n\nüëâ–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å –º–æ–∂–Ω–æ –ø–æ –∫–æ–º–∞–Ω–¥–µ /pay", reply_markup=start_menu)
                            remove_match(user_id, match_id)
                    else:
                        give_like(chat_id, user_id, match_id, message.from_user.username, (user_gender == 2 and match_gender == 1), True, message.text)
            else:
                if message.text == '–ó–Ω–∞–∫–æ–º—Å—Ç–≤–∞ ‚ù§Ô∏è':
                    bot.send_message(chat_id, f"–í—ã –≤ –º–µ–Ω—é –ó–Ω–∞–∫–æ–º—Å—Ç–≤", reply_markup=dating_menu)
                elif message.text == '–ë–∞—Ç—Ç–ª –§–æ—Ç–æ üî•':
                    check_for_completed_battles()
                    bot.send_message(chat_id,f'–í—ã –≤ –º–µ–Ω—é –§–æ—Ç–æ-–ë–∞—Ç—Ç–ª–æ–≤',reply_markup=battle_menu)
                elif message.text == '–ù–∞–∑–∞–¥':
                    bot.send_message(chat_id, f"–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é\n–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª", reply_markup=start_menu)
                elif message.text == '–ú–æ—è –ê–Ω–∫–µ—Ç–∞':
                    flag = is_profile_exists(message)
                    if flag:
                        with conn:
                            result = conn.execute('''
                                SELECT name, photo, gender, bio, age, amount_of_wins, amount_of_pars, city, balance
                                FROM user_profiles 
                                WHERE user_id = ?
                                ''', (user_id,)).fetchone()
                        name, photo_data, gender, bio, age, am_wins, am_pars, city, balance = result
                        if photo_data:
                            bot.send_photo(message.chat.id, photo_data, caption = f'{name}, {age}, {city} - {bio}\n\n–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ –ë–∞—Ç—Ç–ª–∞—Ö: {am_wins} –ø–æ–±–µ–¥ –∏–∑ {am_pars} –ë–∞—Ç—Ç–ª–æ–≤\n\n–í–∞—à –±–∞–ª–ª–∞–Ω—Å: {balance} (–í–∏–¥–Ω–æ —Ç–æ–ª—å–∫–æ –≤–∞–º)\n\n–ß—Ç–æ–±—ã –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /create_profile')
                elif message.text == '–°–º–æ—Ç—Ä–µ—Ç—å –∞–Ω–∫–µ—Ç—ã':
                    flag = is_profile_exists(message)
                    if flag:
                        find_matc(user_id,chat_id)
                elif message.text == '–ö –ê–Ω–∫–µ—Ç–µ':
                    bot.send_message(chat_id, f'–í—ã –≤ –º–µ–Ω—é –ó–Ω–∞–∫–æ–º—Å—Ç–≤!',reply_markup=dating_menu)
                #–û–ë–†–ê–ë–û–¢–ö–ê –¢–ï–ö–°–¢–ê –î–õ–Ø –§–û–¢–û –ë–ê–¢–¢–õ–û–í
                elif message.text == '–ú–æ–π –ü—Ä–æ—Ñ–∏–ª—å':
                    flag = is_profile_exists(message)
                    if flag:
                        with conn:
                            result = conn.execute('''
                                SELECT name, photo, gender, age, amount_of_wins, amount_of_pars, city, balance
                                FROM user_profiles 
                                WHERE user_id = ?
                                ''', (user_id,)).fetchone()
                        name, photo_data, gender, age, am_wins, am_pars, city, balance = result
                        if photo_data:
                            bot.send_photo(message.chat.id, photo_data, caption = f'{name}, {age}, {city}\n\n–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤ –ë–∞—Ç—Ç–ª–∞—Ö: {am_wins} –ø–æ–±–µ–¥ –∏–∑ {am_pars} –ë–∞—Ç—Ç–ª–æ–≤\n\n–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} (–í–∏–¥–Ω–æ —Ç–æ–ª—å–∫–æ –≤–∞–º)\n\n–ß—Ç–æ–±—ã –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /create_profile')
                elif message.text == '–ê–∫—Ç–∏–≤–Ω—ã–µ –ë–∞—Ç—Ç–ª—ã':
                    flag = is_profile_exists(message)
                    if flag:
                        show_next_battle(chat_id,user_id)
                elif message.text == '–ü—Ä–∏–Ω—è—Ç—å –£—á–∞—Å—Ç–∏–µ':
                    join_battle(message)
                elif message.text == '–¢–æ–ø 5 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤':
                    top_5_participants(message)
                elif message.text == '–ó–∞–∫—Ä—ã—Ç—å':
                    if user_id in payloads_ids:
                        bot.delete_message(chat_id, payloads_ids[user_id])
                        payloads_ids.pop(user_id, None)
                        bot.send_message(chat_id, "–ù–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ –∑–∞–∫—Ä—ã—Ç—ã, –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π\n–ö–æ–º–∞–Ω–¥–∞ /pay",reply_markup=start_menu)
                    else:
                        bot.send_message(chat_id, f'–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π', reply_markup=start_menu)
                elif message.text == '–Ø –æ–ø–ª–∞—á—É –æ—Ç–∫—Ä—ã—Ç—ã–π —Å—á–µ—Ç':
                    bot.send_message(chat_id, f'–•–æ—Ä–æ—à–æ, –æ–∂–∏–¥–∞–µ–º –æ–ø–ª–∞—Ç—ã', reply_markup=start_menu, reply_to_message_id=payloads_ids[user_id])    
                elif message.text == '–ú–æ–∏ –ë–∞—Ç—Ç–ª—ã':
                    clear_evaluations_if_needed()
                    if is_profile_exists(message):
                        my_battles(message)
                elif message.text == '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öôÔ∏è':
                    bot.send_message(chat_id, "–í—ã –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—É—é –æ–ø—Ü–∏—é", reply_markup=markup_settings)
                elif message.text == "–ò–∑–º–µ–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É":
                    if is_profile_exists(message):
                        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤ —Å–≤–æ–µ–π –∞–Ω–∫–µ—Ç–µ\n\n–ß—Ç–æ–±—ã –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –∞–Ω–∫–µ—Ç—É, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /create_profile", reply_markup=markup_change_anket)
                elif message.text == "–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è":
                    if is_profile_exists(message):
                        bot.send_message(chat_id, "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤–æ–µ –∏–º—è",reply_markup=types.ReplyKeyboardRemove())
                        bot.register_next_step_handler(message, get_name, 1)
                elif message.text == "–ò–∑–º–µ–Ω–∏—Ç—å –≥–æ—Ä–æ–¥":
                    if is_profile_exists(message):
                        bot.send_message(chat_id, "–ù–∞–ø–∏—à–∏—Ç–µ –Ω–æ–≤—ã–π –≥–æ—Ä–æ–¥",reply_markup=types.ReplyKeyboardRemove())
                        bot.register_next_step_handler(message, get_city, 1)
                elif message.text == "–ò–∑–º–µ–Ω–∏—Ç—å –≤–æ–∑—Ä–∞—Å—Ç":
                    if is_profile_exists(message):
                        bot.send_message(chat_id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç",reply_markup=types.ReplyKeyboardRemove())
                        bot.register_next_step_handler(message, get_age, 1)
                elif message.text == "–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –ø–æ –≤–æ–∑—Ä–∞—Å—Ç—É":
                    if is_profile_exists(message):
                        bot.send_message(chat_id, "–ù–∞–ø–∏—à–∏—Ç–µ 2 —á–∏—Å–ª–∞ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª: –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å–≤–µ–Ω–Ω–æ\n\n<i>–ü—Ä–∏–º–µ—Ä: 20 30\n–û–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –≤—ã –∏—â–∏—Ç–µ –ª—é–¥–µ–π –≤–æ–∑—Ä–∞—Å—Ç–æ–º –æ—Ç 20 –¥–æ 30 –ª–µ—Ç –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ</i>'",parse_mode="HTML",reply_markup=types.ReplyKeyboardRemove())
                        bot.register_next_step_handler(message, get_pref_age, 1)
                elif message.text == "–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–ª":
                    if is_profile_exists(message):
                        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –ø–æ–ª",reply_markup=genders)
                        bot.register_next_step_handler(message, get_gender, 1)
                elif message.text == "–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ":
                    if is_profile_exists(message):
                        bot.send_message(chat_id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ",reply_markup=types.ReplyKeyboardRemove())
                        bot.register_next_step_handler(message, get_photo, 1)
                elif message.text == "–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞":
                    bot.send_message(user_id, f'–í—ã –≤ –º–µ–Ω—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã', reply_markup = markup_referals)
                elif message.text == "üîó–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞":
                    referral_link = f"https://t.me/twinkl_datebot?start={user_id}"
                    bot.send_message(user_id, f"–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: {referral_link}", reply_markup=markup_referals)
                elif message.text == "üî¢–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤":
                        all_amount = conn.execute("SELECT COUNT(*) FROM referrals WHERE user_id = ?", (user_id,))
                        all_amount = all_amount.fetchone()[0]
                        avaliable_amount = conn.execute("SELECT referral_count FROM referral_rewards WHERE user_id = ?", (user_id,)).fetchone()
                        avaliable_amount = avaliable_amount[0] if avaliable_amount else 0
                        bot.send_message(user_id, f"–í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: {all_amount}\n–ò–∑ –Ω–∏—Ö –¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –æ–±–º–µ–Ω–∞ –Ω–∞ –Ω–∞–≥—Ä–∞–¥—ã: {avaliable_amount} ", reply_markup=markup_referals)
                elif message.text == "–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å":
                    bot.send_message(chat_id, f'–ß—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /pay')
                elif message.text == "üèÜ–ú–æ–∏ –Ω–∞–≥—Ä–∞–¥—ã":
                    cursor = conn.execute("SELECT referral_count FROM referral_rewards WHERE user_id = ?", (user_id,))
                    row = cursor.fetchone()
                    referral_count = row[0] if row else 0
                    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω—é –Ω–∞–≥—Ä–∞–¥
                    rewards_menu = types.InlineKeyboardMarkup()
                    rewards_text = f"–£ –≤–∞—Å {referral_count} —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤.\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã:\n"
                    rewards_menu.add(types.InlineKeyboardButton("‚ô•Ô∏è–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ª–∞–π–∫ = 3 —Ä–µ—Ñ.", callback_data="reward_like"))
                    rewards_menu.add(types.InlineKeyboardButton("üí∏–ü–æ–ª—É—á–∏—Ç—å 300‚ÇΩ = 100 —Ä–µ—Ñ.", callback_data="reward_cash"))
                    rewards_menu.add(types.InlineKeyboardButton("‚ûï–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –µ—â—ë", callback_data="invite_more"))
                    bot.send_message(user_id, rewards_text, reply_markup=rewards_menu)
                else:
                    if not(user_id in verif_codes and message.text == verif_codes[user_id]):
                        if user_id != 671084247 and user_id != 7515729537:
                            bot.send_message(chat_id, f'–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–º–∞–Ω–¥–∞.',reply_markup=start_menu)
                        else:
                            txt = message.text
                            if txt.startswith('ban '):
                                id_ban = txt.split()[1]
                                with conn:
                                    conn.execute('UPDATE user_profiles SET status_ban = ?, photo = ? WHERE user_id = ?', ('banned', None, id_ban))
                                bot.send_message(id_ban, f'–í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã. –ß—Ç–æ–±—ã –æ–±–∂–∞–ª–æ–≤–∞—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –∏–ª–∏ –∫—É–ø–∏—Ç—å —Ä–∞–∑–±–∞–Ω –ø–∏—à–∏—Ç–µ @help_username_bot')
                                bot.send_message(user_id, '–∑–∞–±–∞–Ω–∏–ª–∏')
                            elif txt.startswith('unban '):
                                id_ban = txt.split()[1]
                                with conn:
                                    conn.execute('UPDATE user_profiles SET status_ban = ? WHERE user_id = ?', ('norm', id_ban),)
                                bot.send_message(id_ban, f'–í—ã –±—ã–ª–∏ —Ä–∞–∑–±–∞–Ω–µ–Ω—ã. –í–ø—Ä–µ–¥—å –Ω–µ –Ω–∞—Ä—É—à–∞–π—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ –±–æ—Ç–∞.')
                                bot.send_message(user_id,'—Ä–∞–∑–±–∞–Ω–∏–ª–∏')
                            elif txt.startswith('verif '):
                                id_verif, email_verif = txt.split()[1], txt.split()[2]
                                with conn:
                                    conn.execute('UPDATE user_profiles SET email = ? WHERE user_id = ?', (encrypt_data(email_verif, SECRET_KEY), id_verif),)
                                bot.send_message(user_id, '–≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–ª–∏')
                                bot.send_message(id_verif, '–¢–µ–ø–µ—Ä—å –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω! –•–æ—Ä–æ—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!',reply_markup=start_menu)
                                user_states[id_verif] = ''
                            elif txt == '–±–¥':
                                try:
                                    with open('usersDating.db', 'rb') as file:
                                        bot.send_document(user_id, file)
                                except Exception as e:
                                    bot.reply_to(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {e}")
                            elif txt.startswith('–ø–æ–ø–æ–ª–Ω–∏—Ç—å'):
                                id_popln = txt.split()[1]
                                am = txt.split()[2]
                                update_balance(id_popln, am)
                            else:
                                bot.send_message(chat_id, f'–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–º–∞–Ω–¥–∞.',reply_markup=start_menu)
        else:
            if not(user_id in user_states and user_states[user_id].startswith('wait code')) and not(user_id in user_states and user_states[user_id] == 'wait email'):
                    bot.send_message(chat_id, '–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –ø–æ—á—Ç—É. –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /verify')

bot.polling(none_stop=True)
